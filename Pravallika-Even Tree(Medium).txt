import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;


public class Solution 
{
    public static Map<Integer, ArrayList<Integer>> tree;
    public static int count;
    
    public static void main(String[] args) 
    {
        Scanner scanner = new Scanner(System.in);
        
        int vertex = scanner.nextInt();
        int edge = scanner.nextInt();
        
        tree = new HashMap<Integer, ArrayList<Integer>>();
        for (int i=1; i<=vertex; i++) 
        {
            tree.put(i, new ArrayList<Integer>());
        }
        
        for (int i=0; i<edge; i++) 
        {
            int child = scanner.nextInt();
            int parent = scanner.nextInt();
            
            tree.get(parent).add(child);
        }
        
        for (int i=2; i<=tree.size(); i++)
         {
            if ((countChild(i) % 2) != 0) 
            {
                count++;
            }
        }
        
        System.out.println(count);
    }
    
    public static int countChild(int j) 
    {
        int totalChild = tree.get(j).size();
        for (int child : tree.get(j))
        {
            totalChild += countChild(child);
        }
        return totalChild;
    }
}
